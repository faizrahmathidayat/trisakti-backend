# Generated by Django 2.2.4 on 2019-09-03 11:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import trisakti.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('areas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name of User')),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('remember_token', models.CharField(blank=True, max_length=255, null=True)),
                ('telp', models.CharField(max_length=13)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id_profile', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('url_photo', models.ImageField(upload_to='users', validators=[trisakti.users.models.file_size], verbose_name='Image User')),
                ('nik', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('birth_location', models.CharField(blank=True, max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('faculty', models.IntegerField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('generation', models.IntegerField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_forum', models.BooleanField(default=False)),
                ('is_marketplace', models.BooleanField(default=False)),
                ('id_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='country_user', to='areas.Country')),
                ('id_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='district_user', to='areas.District')),
                ('id_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='province_user', to='areas.Province')),
                ('id_village', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='village_user', to='areas.Village')),
                ('postal_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='postalcode_user', to='areas.PostalCode')),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'verbose_name': 'user_profile',
                'verbose_name_plural': 'users_profile',
                'db_table': 'user_profile',
            },
        ),
    ]
